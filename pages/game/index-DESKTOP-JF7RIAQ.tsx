import { useState, useEffect, useRef } from 'react'; // Import useRef
import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import Header from '@/pages/components/header';
// the style
import styles from '@/styles/gam.module.css';
import { generateEquation } from '@/websocket-server/gen';
import Calc from '@/pages/components/calc';
import { getCookie } from 'cookies-next';
import { useRouter } from 'next/router';
import { generateSecret } from "@/lib/utils"
// font
const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [equation, setEquation] = useState('');
  const [answer, setAnswer] = useState('');
  const [inputValue, setInputValue] = useState(''); // Add this line
  const inputRef = useRef(null); // Create a ref
  const router = useRouter()
  useEffect(() => {
    if(getCookie('token') == null){
      router.push('/login')
      return
    }
    // Generate an equation when the component mounts
    const newEquation = generateEquation(1); // Replace 1 with the desired level
    setEquation(newEquation.equationString);
    setAnswer(newEquation.result);
  }, []);

  useEffect(() => {
    // Focus the input field once the component has mounted
    if (inputRef.current) {
      inputRef.current.focus();
    }
  }, []);

  const handleChange = (event) => {
    // Update inputValue when the user types into the input field
    setInputValue(event.target.value);
  }

  return (
    <>
      <Head>
        <title>Lobby</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`${styles.fixed}`}>
        <Header />
        <main className={`${styles.main} ${inter.className}`}>
          <div>
            <h1 className={`${styles.nah}`}>Lobby</h1>
          </div>
          <button className={`${styles.queue}`} style={{
          }} onClick={()=> {
            const code = generateSecret(8)
            router.push(`/game/${code}`)
          }}>Create A Game</button>
          <div className={`${styles.cen}`}>
            <p className={`${styles.p}`}>{equation}</p>
              <div className={`${styles.boxing}`}>
                <div className={`${styles.calc1}`}>{/*calc1*/}
                  <div className={`${styles.res}`}>
                    {/* Add ref to the input field */}
                    <input type="number" className={`${styles.res}`} value={inputValue} onChange={handleChange} placeholder="0" ref={inputRef} 
                    onKeyDown={(event) => {
                      if(event.key === 'Enter'){
                        if(inputValue == answer){
                          const newEquation = generateEquation(1); // Replace 1 with the desired level
                          setEquation(newEquation.equationString);
                          setAnswer(newEquation.result);
                        }else{
                          alert('wrong answer')
                        }
                        setInputValue('')
                      }
                    }}
                    />
                  </div>
                    {/* Pass setInputValue as a prop to Calc */}
                    <Calc inputValue={inputValue} setInputValue={setInputValue} />
                </div>
              </div>
          </div>
        </main>
      </div>
    </>
  );
}
